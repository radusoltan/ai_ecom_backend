# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    response_envelope.enabled: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Shared/Tenant/TenantId.php'
            - '../src/Infrastructure/API/GraphQl/*'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Infrastructure\Monitoring\RequestIdProcessor:
        tags: ['monolog.processor']
    App\Shared\Tenant\TenantContext:
        public: true
    App\Shared\OpenApi\EnvelopedOpenApiFactory:
        decorates: 'api_platform.openapi.factory'
        arguments: ['@App\Shared\OpenApi\EnvelopedOpenApiFactory.inner']

    App\Infrastructure\API\Pagination\State\CursorCollectionProvider:
        decorates: 'api_platform.doctrine.orm.state.collection_provider'
        decoration_on_invalid: ignore
        arguments: ['@?App\\Infrastructure\\API\\Pagination\\State\\CursorCollectionProvider.inner']

    App\Infrastructure\Security\PolicyEvaluator:
        arguments:
            $policies: '%security.policies%'

    App\Shared\Feature\FeatureFlagService:
        public: true

# App\Infrastructure\Security\JWTCreatedListener:
#   tags: [ { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated } ]
